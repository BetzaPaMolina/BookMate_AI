import json
from datetime import datetime

class BookAgent:
    def __init__(self):
        # Biblioteca completa de libros organizados por categor√≠a
        self.books = {
            "filosofia": [
                {
                    "titulo": "Memorias del subsuelo",
                    "autor": "Fi√≥dor Dostoievski",
                    "descripcion": "Existencialismo, alienaci√≥n e introspecci√≥n profunda",
                    "color": "#6B9BC4",
                    "emoji": "üß†"
                },
                {
                    "titulo": "Crimen y castigo",
                    "autor": "Fi√≥dor Dostoievski",
                    "descripcion": "Culpa, moral y redenci√≥n en la Rusia zarista",
                    "color": "#9B8BC4",
                    "emoji": "‚öñÔ∏è"
                },
                {
                    "titulo": "Demian",
                    "autor": "Hermann Hesse",
                    "descripcion": "Identidad, crecimiento y espiritualidad",
                    "color": "#7BC4A4",
                    "emoji": "üå±"
                },
                {
                    "titulo": "Siddharta",
                    "autor": "Hermann Hesse",
                    "descripcion": "B√∫squeda espiritual y sabidur√≠a oriental",
                    "color": "#E0C47A",
                    "emoji": "üïâÔ∏è"
                },
                {
                    "titulo": "El retrato de Dorian Gray",
                    "autor": "Oscar Wilde",
                    "descripcion": "Narcisismo, moralidad y decadencia del arte",
                    "color": "#9B8BC4",
                    "emoji": "üñºÔ∏è"
                }
            ],
            "romance": [
                {
                    "titulo": "Mar√≠a",
                    "autor": "Jorge Isaacs",
                    "descripcion": "Amor imposible y romanticismo cl√°sico latinoamericano",
                    "color": "#E07A7A",
                    "emoji": "üíî"
                },
                {
                    "titulo": "Jane Eyre",
                    "autor": "Charlotte Bront√´",
                    "descripcion": "Amor, independencia y fortaleza moral",
                    "color": "#D4A5C4",
                    "emoji": "üíù"
                },
                {
                    "titulo": "Anna Karenina",
                    "autor": "Le√≥n Tolst√≥i",
                    "descripcion": "Amor, sociedad y dilemas morales en la Rusia imperial",
                    "color": "#E07AA4",
                    "emoji": "üåπ"
                }
            ],
            "distopia": [
                {
                    "titulo": "1984",
                    "autor": "George Orwell",
                    "descripcion": "Totalitarismo, vigilancia masiva y control del pensamiento",
                    "color": "#6B7BC4",
                    "emoji": "üëÅÔ∏è"
                },
                {
                    "titulo": "Rebeli√≥n en la granja",
                    "autor": "George Orwell",
                    "descripcion": "Corrupci√≥n del poder a trav√©s de una s√°tira animal",
                    "color": "#E07A7A",
                    "emoji": "üê∑"
                },
                {
                    "titulo": "Fahrenheit 451",
                    "autor": "Ray Bradbury",
                    "descripcion": "Censura, quema de libros y libertad de pensamiento",
                    "color": "#E0C47A",
                    "emoji": "üî•"
                },
                {
                    "titulo": "Un mundo feliz",
                    "autor": "Aldous Huxley",
                    "descripcion": "Manipulaci√≥n gen√©tica y felicidad artificial",
                    "color": "#7BC4A4",
                    "emoji": "üíä"
                }
            ],
            "aventura": [
                {
                    "titulo": "La Odisea",
                    "autor": "Homero",
                    "descripcion": "√âpica aventura de Odiseo regresando a casa",
                    "color": "#6B9BC4",
                    "emoji": "‚õµ"
                },
                {
                    "titulo": "Moby Dick",
                    "autor": "Herman Melville",
                    "descripcion": "Obsesi√≥n y aventura en los mares",
                    "color": "#6B7BC4",
                    "emoji": "üêã"
                }
            ],
            "clasica": [
                {
                    "titulo": "Los miserables",
                    "autor": "Victor Hugo",
                    "descripcion": "Justicia, redenci√≥n y amor en la Francia revolucionaria",
                    "color": "#9B8BC4",
                    "emoji": "‚öúÔ∏è"
                },
                {
                    "titulo": "Los hermanos Karam√°zov",
                    "autor": "Fi√≥dor Dostoievski",
                    "descripcion": "√âtica, fe y dilemas morales familiares",
                    "color": "#6B9BC4",
                    "emoji": "üë•"
                },
                {
                    "titulo": "La Divina Comedia",
                    "autor": "Dante Alighieri",
                    "descripcion": "Viaje √©pico por el infierno, purgatorio y para√≠so",
                    "color": "#E07A7A",
                    "emoji": "üî±"
                }
            ],
            "realismo_magico": [
                {
                    "titulo": "Pedro P√°ramo",
                    "autor": "Juan Rulfo",
                    "descripcion": "Muerte, memoria y fantasmas en Comala",
                    "color": "#9B8BC4",
                    "emoji": "üëª"
                }
            ],
            "motivacional": [
                {
                    "titulo": "El l√≠der mentor",
                    "autor": "Tony Dungy",
                    "descripcion": "Liderazgo, fe y prop√≥sito de vida",
                    "color": "#7BC4A4",
                    "emoji": "üíº"
                }
            ],
            "humor": [
                {
                    "titulo": "Soy un gato",
                    "autor": "Natsume S≈çseki",
                    "descripcion": "Filosof√≠a cotidiana e iron√≠a social desde la perspectiva de un gato",
                    "color": "#E0C47A",
                    "emoji": "üê±"
                }
            ]
        }
        
        # Biblioteca completa como lista para mostrar en UI
        self.all_books = []
        for categoria in self.books.values():
            self.all_books.extend(categoria)
    
    def get_all_books(self):
        """Retorna todos los libros de la biblioteca"""
        return self.all_books
    
    def recomendar(self, estado_animo, genero):
        print(f"üîç OBSERVACI√ìN: Estado √°nimo='{estado_animo}', G√©nero='{genero}'")
        
        # OBSERVACI√ìN
        observacion = {
            "estado_animo": estado_animo,
            "genero": genero,
            "timestamp": datetime.now().isoformat()
        }
        
        # RAZONAMIENTO - Reglas condicionales mejoradas
        libro = None
        regla = ""
        razon = ""
        
        # Prioridad 1: G√©nero espec√≠fico
        if genero.lower() in ["distopia", "distop√≠a"]:
            libro = self.books["distopia"][0]  # 1984
            regla = "IF g√©nero == 'distopia' ‚Üí Prioridad ALTA"
            razon = "G√©nero dist√≥pico detectado - recomendando cl√°sico del control totalitario"
            
        elif genero.lower() in ["filosofia", "filosof√≠a"]:
            if estado_animo.lower() == "pensativo":
                libro = self.books["filosofia"][0]  # Memorias del subsuelo
                regla = "IF g√©nero == 'filosofia' AND estado == 'pensativo' ‚Üí Prioridad ALTA"
                razon = "Estado pensativo + filosof√≠a - obra existencialista perfecta para reflexi√≥n profunda"
            else:
                libro = self.books["filosofia"][3]  # Siddharta
                regla = "IF g√©nero == 'filosofia' ‚Üí Prioridad ALTA"
                razon = "B√∫squeda filos√≥fica - obra sobre sabidur√≠a y autodescubrimiento"
                
        elif genero.lower() == "aventura":
            libro = self.books["aventura"][0]  # La Odisea
            regla = "IF g√©nero == 'aventura' ‚Üí Prioridad ALTA"
            razon = "G√©nero aventura - √©pica cl√°sica llena de viajes y haza√±as heroicas"
            
        elif genero.lower() in ["clasica", "cl√°sica"]:
            libro = self.books["clasica"][0]  # Los miserables
            regla = "IF g√©nero == 'clasica' ‚Üí Prioridad ALTA"
            razon = "Literatura cl√°sica - obra maestra sobre justicia y redenci√≥n"
            
        elif genero.lower() == "romance" or genero.lower() == "novela":
            if estado_animo.lower() == "triste":
                libro = self.books["romance"][1]  # Jane Eyre
                regla = "IF g√©nero == 'romance' AND estado == 'triste' ‚Üí Prioridad ALTA"
                razon = "Estado triste + romance - historia de amor que inspira fortaleza y superaci√≥n"
            else:
                libro = self.books["romance"][0]  # Mar√≠a
                regla = "IF g√©nero == 'romance' ‚Üí Prioridad ALTA"
                razon = "Romance cl√°sico latinoamericano lleno de belleza y melancol√≠a"
        
        # Prioridad 2: Estado de √°nimo si no hay g√©nero espec√≠fico o g√©nero no encontrado
        if not libro:
            if estado_animo.lower() == "triste":
                libro = self.books["motivacional"][0]  # El l√≠der mentor
                regla = "IF estado_animo == 'triste' ‚Üí Prioridad MEDIA"
                razon = "Estado triste detectado - libro motivacional para recuperar el √°nimo y encontrar prop√≥sito"
                
            elif estado_animo.lower() == "pensativo":
                libro = self.books["filosofia"][0]  # Memorias del subsuelo
                regla = "IF estado_animo == 'pensativo' ‚Üí Prioridad MEDIA"
                razon = "Estado pensativo - obra filos√≥fica para introspecci√≥n profunda"
                
            elif estado_animo.lower() == "feliz":
                libro = self.books["aventura"][0]  # La Odisea
                regla = "IF estado_animo == 'feliz' ‚Üí Prioridad MEDIA"
                razon = "Estado feliz - aventura √©pica para disfrutar con energ√≠a positiva"
                
            elif estado_animo.lower() == "motivado":
                libro = self.books["clasica"][0]  # Los miserables
                regla = "IF estado_animo == 'motivado' ‚Üí Prioridad MEDIA"
                razon = "Estado motivado - historia inspiradora de lucha y superaci√≥n"
                
            elif estado_animo.lower() == "aburrido":
                libro = self.books["humor"][0]  # Soy un gato
                regla = "IF estado_animo == 'aburrido' ‚Üí Prioridad MEDIA"
                razon = "Aburrimiento detectado - obra ir√≥nica y humor√≠stica para entretenerte con perspectiva √∫nica"
                
            else:
                libro = self.books["filosofia"][3]  # Siddharta (default)
                regla = "ELSE ‚Üí Prioridad BAJA"
                razon = "Recomendaci√≥n vers√°til - obra sobre b√∫squeda personal y sabidur√≠a universal"
        
        print(f"ü§î RAZONAMIENTO: {regla}")
        print(f"üéØ ACCI√ìN: Recomendar '{libro['titulo']}'")
        
        # ACCI√ìN
        recomendacion = {
            "libro": libro,
            "proceso": {
                "observacion": observacion,
                "razonamiento": {
                    "regla": regla, 
                    "explicacion": razon
                },
                "accion": "Generar recomendaci√≥n personalizada basada en biblioteca literaria"
            }
        }
        
        return recomendacion

# Para probar el agente directamente
if __name__ == "__main__":
    agente = BookAgent()
    print(f"üìö Total de libros en biblioteca: {len(agente.all_books)}")
    prueba = agente.recomendar("aburrido", "cualquiera")
    print("\nüìñ RECOMENDACI√ìN:", prueba["libro"]["titulo"])