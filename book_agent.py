import json
from datetime import datetime

class BookAgent:
    def __init__(self):
        self.books = {
            "distopia": {
                "titulo": "1984", 
                "autor": "George Orwell",
                "descripcion": "Cl√°sico dist√≥pico sobre control gubernamental y libertad individual"
            },
            "esperanzador": {
                "titulo": "El Alquimista", 
                "autor": "Paulo Coelho",
                "descripcion": "Viaje inspirador sobre seguir tus sue√±os y encontrar tu prop√≥sito"
            },
            "filosofia": {
                "titulo": "El Mundo de Sof√≠a", 
                "autor": "Jostein Gaarder",
                "descripcion": "Novela que introduce la filosof√≠a de manera accesible y reflexiva"
            },
            "aventura": {
                "titulo": "La Isla del Tesoro", 
                "autor": "Robert Louis Stevenson",
                "descripcion": "Emocionante aventura sobre b√∫squedas de tesoros y viajes √©picos"
            },
            "default": {
                "titulo": "Cien A√±os de Soledad", 
                "autor": "Gabriel Garc√≠a M√°rquez",
                "descripcion": "Obra maestra del realismo m√°gico latinoamericano"
            }
        }
    
    def recomendar(self, estado_animo, genero):
        print(f"üîç OBSERVACI√ìN: Estado √°nimo='{estado_animo}', G√©nero='{genero}'")
        
        # OBSERVACI√ìN
        observacion = {
            "estado_animo": estado_animo,
            "genero": genero,
            "timestamp": datetime.now().isoformat()
        }
        
        # RAZONAMIENTO - Reglas condicionales
        if genero.lower() == "distopia":
            libro = self.books["distopia"]
            regla = "IF g√©nero == 'distopia' ‚Üí Prioridad ALTA"
            razon = "G√©nero espec√≠fico detectado - recomendar cl√°sico del g√©nero"
            
        elif estado_animo.lower() == "triste":
            libro = self.books["esperanzador"]
            regla = "IF estado_animo == 'triste' ‚Üí Prioridad MEDIA" 
            razon = "Estado triste detectado - recomendar lectura esperanzadora"
            
        elif estado_animo.lower() == "pensativo":
            libro = self.books["filosofia"]
            regla = "IF estado_animo == 'pensativo' ‚Üí Prioridad MEDIA"
            razon = "Estado pensativo detectado - recomendar obra reflexiva"
            
        elif estado_animo.lower() == "feliz" or estado_animo.lower() == "aventurero":
            libro = self.books["aventura"]
            regla = "IF estado_animo == 'feliz/aventurero' ‚Üí Prioridad MEDIA"
            razon = "Estado positivo detectado - recomendar aventura emocionante"
            
        else:
            libro = self.books["default"]
            regla = "ELSE ‚Üí Prioridad BAJA"
            razon = "Recomendaci√≥n por defecto - obra maestra universal"
        
        print(f"ü§î RAZONAMIENTO: {regla}")
        print(f"üéØ ACCI√ìN: Recomendar '{libro['titulo']}'")
        
        # ACCI√ìN
        recomendacion = {
            "libro": libro,
            "proceso": {
                "observacion": observacion,
                "razonamiento": {
                    "regla": regla, 
                    "explicacion": razon
                },
                "accion": "Generar recomendaci√≥n personalizada"
            }
        }
        
        return recomendacion

# Para probar el agente directamente
if __name__ == "__main__":
    agente = BookAgent()
    prueba = agente.recomendar("triste", "novela")
    print("\nüìñ RECOMENDACI√ìN:", prueba["libro"]["titulo"])